<link rel="stylesheet" href="/static/css/style_prototype.css">
  <div id="navbar">
    <div id="logo"><a href="/">Better Reads</a></div>
    <div class="user-actions">
      {{#if loggedIn}}
      <a href="/logout">Logout</a>
      <a href="/profile">Hello, {{username}}</a>
      {{else}}
      <a href="/login">Login</a>
      <a href="/register">Register</a>
      {{/if}}
    </div>
  </div>

  <div id="main-layout">
    <!-- Left sidebar -->
    <div id="sidebar">
      {{!-- Si es feed de libro, se muestra info de libro en vez de menu de navegacion --}}
    {{#if book}}
      <a href="/book/{{book.id}}"><button id="goBackButton">Go back to book</button></a>
      <div id="book-info">
        <img src="{{book.cover_url}}" alt="Book cover" id="book-cover">
        <h2>{{book.title}}</h2>
      </div>
    {{else}}
      <ul>
        <li><a href="/profile">My User</a></li>
        <li><a href="/browse">Browse</a></li>
        <li><a href="/my-reviews">My Books</a></li>
        <li><a href="/favorites">Following</a></li>
        <li><a href="/settings">Settings</a></li>
      </ul>
    {{/if}}
    </div>

    <div id="container">
      <div id="new-post">
        <form action="/post" method="post">
          <textarea name="post-content" placeholder="Post your opinion" maxlength="50000" required></textarea>
{{!-- Si es feed de libro, existe solo un libro como opcion de publicacion, --}}
          {{#if book}}
          <select name="book" style="width: 100%;" disabled>
            <option selected="true" value="{{book.id}}">{{book.title}}</option>
          </select>
          {{!-- Tengo que agregar este input hidden, porque el select esta desactivado, por lo que no se envia --}}
          <input type="hidden" name="book" value="{{book.id}}" />
          <input type="hidden" name="goBackToBookFeed" value="true" />
            {{else}}

          <select name="book" id="book-select" style="width: 100%;">
            
            <option value="">-- Select a book --</option>
            {{#each bookEntries}}
             <option value="{{this.id}}">{{this.book_name}}</option>
            {{/each}}
          </select>
          {{!-- Envio este parametro para saber que tengo que volver al feed general. --}}
          <input type="hidden" name="goBackToBookFeed" value="false" />
            {{/if}}
          <button type="submit">Post</button>
        </form>
      </div>

      <div id="feed">
        {{#if posts}}
        {{#each posts}}
        <div class="post" post-id="{{post_id}}">
          <div class="user-info">
            <!-- Se tiene que agregar el link personalizado para el usuario de este post -->
            {{#if repost_username}}<strong style="color: gray;">@{{repost_username}} ‚•Ç</strong> {{/if}}<strong>@{{username}}</strong> on <a href="book/{{book_id}}" class="topic-link"><em>{{book_name}}</em></a>
          </div>
          <div class="review">
            {{content}}
          </div>
          <div class="post-actions">
            <div style="display: flex; align-items: center;">
              <a href="#" class="like-button"><span class="like-counter" style="margin-right: 8px;">ü§ç ?</span></a>
              <a href="#" class="repost-button"><span class="repost-counter" style="margin-right: 8px;">AVAIBLE üîÅ {{number_reposts}}</span></a>
              <span style="margin-right: 8px;">üì© {{number_comments}}</span>
            </div>
            <a href="/post/{{post_id}}">Comments</a>
          </div>
        </div>
        {{/each}}
        {{#if last_date}}
        <a href="/?last_date={{last_date}}">Load more posts</a>
        {{else}}
        <p>You have reached the bottom! There are no more older posts</p>
        {{/if}}
        {{else}}
        <p>No posts yet</p>
        {{/if}}
      </div>
      <script type="module">
        //Esta funcion busca el boton de like y actualiza el contador de likes, y si le diste like o no.
        async function updateLikes(post_id) {
          let response = await fetch(`http://localhost/post/${post_id}/like`, {
            method: "GET",
          });
          let data = await response.json();

          const contentToUse = (data.liked ? "‚ù§Ô∏è" : "ü§ç") + ` ${data.like_count}`;

          const posts = document.querySelectorAll(`.post[post-id="${post_id}"]`);
          posts.forEach(post => {
            const likeCounter = post.querySelector(".like-counter");

            likeCounter.textContent = contentToUse;
          });
        }

        //Cada vez que se muestra la pagina (se recarga, o se vuelva atras desde otra pagina) se actualizan los likes de todos los posts.
        window.addEventListener('pageshow', function(event) {
          const posts = document.querySelectorAll(".post");
          posts.forEach(post => {
            const post_id = post.getAttribute("post-id");
            updateLikes(post_id);
          });
        });

        document.getElementById("feed").addEventListener("click", function(event) {
          const postDiv = event.target.closest(".post");
          const post_id = postDiv.getAttribute("post-id");
          if (event.target.closest(".like-button")) {
            event.preventDefault();

            fetch(`http://localhost/post/${post_id}/like`, {
              method: "GET",
            })
            .then(res => {
              return res.json();
            })
            .then(data => {
              return fetch(`http://localhost/post/${post_id}/` + data.liked?"unlike":"like", {
                method: "POST",
              })
            })
            .then(res => {
              updateLikes(post_id);
            })

          } else if (event.target.closest(".repost-button")) {
            event.preventDefault();
            const repostCountElement = postDiv.querySelector(".repost-counter");
            //"AVAIBLE üîÅ X"
            // obtain the number x
            const numberofReposts = repostCountElement.textContent.split(" ")[2];

            console.log("REPOST", post_id)

            fetch(`http://localhost/post/${post_id}/repost`, {
              method: "POST",
            })
            .then(res => {
              repostCountElement.textContent = `-> ${Number(numberofReposts)+1}`;
            })
          }
        }); 
      </script>
    </div>
 <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
  <script>
    $(document).ready(function() {
  $('#book-select').select2({
    placeholder: "-- Select a book --",
    ajax: {
      url: '/browse/search',
      dataType: 'json',
      delay: 300,
      data: function(params) {
        return {
          search: params.term 
        };
      },
      processResults: function(data) {
        return {
          results: data.bookEntries.map(book => ({
            id: book.id,
            text: book.book_name
          }))
        };
      },
      cache: true
    }
  });
});
   
  </script>
