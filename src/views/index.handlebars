<link rel="stylesheet" href="/static/css/style_prototype.css">

  <div id="main-layout">
    <!-- Left sidebar -->
    <div id="sidebar">
      {{!-- Si es feed de libro, se muestra info de libro en vez de menu de navegacion --}}
    {{#if book}}
      <a href="/book/{{book.id}}"><button id="goBackButton">Go back to book</button></a>
      <div id="book-info">
        <img src="{{book.cover_url}}" alt="Book cover" id="book-cover">
        <h2>{{book.title}}</h2>
      </div>
    {{else if author}}
      <a href="browse/author/{{author}}"><button id="goBackButton">Go back to author</button></a>
      <div id="author-info">
        <h2>{{author}}</h2>
      </div>
    {{else if genre}}
      <a href="browse/genre/{{genre}}"><button id="goBackButton">Go back to genre</button></a>
      <div id="genre-info">
        <h2>{{genre}}</h2>
      </div> 
    {{else}}
      <ul>
        <li><a href="/profile">My User</a></li>
        <li><a href="/browse">Browse</a></li>
        <li><a href="/profile">My Posts</a></li>
        <li><a href="/following-posts">Following</a></li>
      </ul>
    {{/if}}
    </div>

    <div id="container">
      {{#if allowPosting}}
      <div id="new-post">
        <form action="/post" method="post">
          <textarea name="post-content" placeholder="Post your opinion" maxlength="50000" required></textarea>

          <fieldset>
            <legend>Publicar sobre</legend>
            <div class="toggle">
              <input type="radio" id="book-topic" name="type" value="book" hideInput {{#if book}}class="readonly"{{/if}}></input>
              <label for="book-topic">libro</label>
              <input type="radio" id="author-topic" name="type" value="author" hideInput {{#if book}}class="readonly"{{/if}}></input> 
              <label for="author-topic">autor</label>
            </div>
            </fieldset>

{{!-- Si es feed de libro, existe solo un libro como opcion de publicacion, --}}
          {{#if book}}
          <select name="book" style="width: 100%;" disabled>
            <option selected="true" value="{{book.id}}">{{book.title}}</option>
          </select>
          {{!-- Tengo que agregar este input hidden, porque el select esta desactivado, por lo que no se envia --}}
          <input type="hidden" name="book" value="{{book.id}}" />
          <input type="hidden" name="goBackToFeed" value="book" />
          {{else if author}}
          <select name="author" style="width: 100%;" disabled>
            <option selected="true" value="{{author}}">{{author}}</option>
          </select>
          <input type="hidden" name="author" value="{{author}}" />
          <input type="hidden" name="goBackToFeed" value="author" />
          {{else}}

            

          <div id="author-select-div">
            <select name="author" id="author-select" style="width: 100%;" required>
            </select>
          </div>

          <div id="book-select-div">
            <select name="book" id="book-select" style="width: 100%;" required>
            </select>
          </div>

          {{!-- Envio este parametro para saber que tengo que volver al feed general. --}}
          <input type="hidden" name="goBackToBookFeed" value="false" />
            {{/if}}
          <button type="submit">Post</button>
        </form>
      </div>
      {{/if}}
      {{> feed_of_posts}}
    </div>

<style>
{{!-- EXAMPLE: https://codepen.io/dsenneff/pen/ZoLVZW --}}

/* STYLE THE HTML ELEMENTS (INCLUDES RESETS FOR THE DEFAULT FIELDSET AND LEGEND STYLES) */

fieldset {
  border: none;
  margin: 0;
  padding: 10px 0;
  legend {
    font-size: 1rem; font-weight: bold; color: black;  
  }
}

/* TOGGLE STYLING */
.toggle {
  display: flex; flex-flow: row nowrap;
  justify-content: flex-start; align-items: stretch;
  input {
    /* oculta los botoncitos del radio */
    position: fixed;
    opacity: 0;
  }
  input + label {
    margin: 0; padding: .75rem 2rem; box-sizing: border-box;
    position: relative; display: inline-block;
    border: solid 1px #DDD; background-color: #FFF;
    font-size: 1rem; line-height: 140%; font-weight: 600; text-align: center;
    box-shadow: 0 0 0 rgba(255, 0, 0, 0);
    transition:   border-color .15s ease-out, 
          color .25s ease-out, 
          background-color .15s ease-out,
          box-shadow .15s ease-out;
    
    /* ADD THESE PROPERTIES TO SWITCH FROM AUTO WIDTH TO FULL WIDTH */
    /*flex: 0 0 50%; display: flex; justify-content: center; align-items: center;*/
    /* ----- */
    
    &:first-of-type {border-radius: 6px 0 0 6px; border-right: none;}
    &:last-of-type {border-radius: 0 6px 6px 0; border-left: none;}
  }
  input:hover + label {border-color: rgb(68, 68, 129);}
  input:checked + label {
    background-color: #0077b6;
    color: #FFF;
    box-shadow: black;
    border-color: #00a6ff(0, 82, 82);
    z-index: 1;
    box-shadow: 0 0 100px rgba(#0077b6, .5)
  }
  input:focus + label {@include focusOutline;}
  input.readonly + label {
    background-color: #DDD;
    color: #AAA;
    pointer-events: none;
    cursor: not-allowed;
  }
  input.readonly:checked + label {
    background-color: #AAA;
    color: #FFF;
  }
  input.readonly:hover + label {border-color: #DDD;}


  @include breakpoint(800) {
    input + label {
      padding: .75rem .25rem;
      flex: 0 0 50%;
      display: flex; justify-content: center; align-items: center;
    }
  }
}
</style>

<script src="/static/js/updateLikes.js" type="text/javascript"></script>
<script src="/static/js/like.js" type="text/javascript" event_listener_location="feed"></script>



 <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
  <script>
    $(document).ready(function() {
  $('#author-select').select2({
    placeholder: "-- Select an author --",
    ajax: {
      url: '/browse/search_author',
      dataType: 'json',
      delay: 300,
      data: function(params) {
        return {
          search: params.term
        };
      },
      processResults: function(data) {
        return {
          results: data.authorEntries.map(author => ({
            id: author.author_id,
            text: author.author_id
          }))
        };
      },
      cache: true
    }
  });


  $('#book-select').select2({
    placeholder: "-- Select a book --",
    ajax: {
      url: '/browse/search',
      dataType: 'json',
      delay: 300,
      data: function(params) {
        return {
          search: params.term 
        };
      },
      processResults: function(data) {
        return {
          results: data.bookEntries.map(book => ({
            id: book.id,
            text: book.book_name
          }))
        };
      },
      cache: true
    }
  });
});
   
  </script>


<script>
  function changeToggle(type) {
      // type can be 'book' or 'author' or 'genre' or 'none'
      //in the case of book or author, the toggle has to be disabled, and selected the correct one.
      //in the case of none, the toggle has to be enabled, and selected by default book

      const bookTopicInput = document.getElementById("book-topic");
      const authorTopicInput = document.getElementById("author-topic");

      if (type === 'book') {
        bookTopicInput.checked = true;
        authorTopicInput.checked = false;
        //Add class "readonly"
        bookTopicInput.classList.add("readonly");
        authorTopicInput.classList.add("readonly");
      } else if (type === 'author') {
        bookTopicInput.checked = false;
        authorTopicInput.checked = true;
        bookTopicInput.classList.add("readonly");
        authorTopicInput.classList.add("readonly");
      } else {
        bookTopicInput.checked = true;
        authorTopicInput.checked = false;
      }     
    }


  document.addEventListener("DOMContentLoaded", function() {

    
    changeToggle({{#if book}}"book"{{else if author}}"author"{{else}}"none"{{/if}});

    const bookTopicInput = document.getElementById("book-topic");
    const authorTopicInput = document.getElementById("author-topic");


    // Eventos de cambio en los radios
    bookTopicInput.addEventListener("change", updateSelectVisibility);
    authorTopicInput.addEventListener("change", updateSelectVisibility);

    // Actualizar visibilidad en la carga inicial
    updateSelectVisibility();
  });

  // Funci√≥n para actualizar la visibilidad de los selects
  function updateSelectVisibility() {
    const bookTopicInput = document.getElementById("book-topic");
    const authorTopicInput = document.getElementById("author-topic");

    const bookSelect = document.getElementById("book-select-div");
    const authorSelect = document.getElementById("author-select-div");

    if (bookTopicInput.checked) {
      //toggle what select is visible
      bookSelect.style.display = "block";
      authorSelect.style.display = "none";
      //toggle what select is required
      bookSelect.querySelector("select").required = true;
      authorSelect.querySelector("select").required = false;
      //delete selection of author
      $('#author-select').empty();
    } else if (authorTopicInput.checked) {
      authorSelect.style.display = "block";
      bookSelect.style.display = "none";
      authorSelect.querySelector("select").required = true;
      bookSelect.querySelector("select").required = false;
      //delete selection of book
      $('#book-select').empty();
    }
  }
</script>