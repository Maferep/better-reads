<link rel="stylesheet" href="/static/css/navbar.css" />

<div id="navbar">
  <div id="logo"><a href="/">Better Reads</a></div>
  <div class="user-actions">
    {{#if loggedIn}}
      <a id="cart-button" href="/cart">
        <img src="/static/assets/icons8-cart-48.png" alt="Cart">
        <span id="cart-items-count" class="cart-badge" hidden>0</span>
      </a>
      <a id="notification-button" href="/notification">
        <img id="notification-icon" src="/static/assets/notification_icon.svg" alt="Notifications">
        <span id="notification-count" class="notification-count" hidden>0</span>
      </a>
      <a href="#" id="logout-link">Logout</a>
      <a href="/profile">Hello, {{username}}</a>
      <script>
        document.addEventListener('DOMContentLoaded', function() {
          const logoutLink = document.getElementById('logout-link');
          if (logoutLink) {
            logoutLink.addEventListener('click', function(event) {
              event.preventDefault();
              console.log('Logout link clicked');
              firebase.auth().signOut();
              fetch("/logout", {
                method: "GET",
              });
              window.location.href = "/"
            });
          }
        });
      </script>
    {{else}}
      <a href="/login">Login</a>
      <a href="/register">Register</a>
    {{/if}}
  </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  function updateNotificationCountElement(numberOfNotifications) {
    const notificationCountElement = document.getElementById('notification-count');
    notificationCountElement.innerText = numberOfNotifications;
    if (numberOfNotifications === 0) {
      notificationCountElement.style.display = 'none';
    } else {
      notificationCountElement.style.display = 'block';
    }
  }

  function updateNotificationCount() {
    console.log("Actualizando numero de notificaciones");
    fetch('/notification/unread-count')
      .then(response => response.json())
      .then(data => updateNotificationCountElement(data.count));
  }

  setInterval(updateNotificationCount, 5000);

  //update number of notifications when the page loads
  updateNotificationCount();
</script>
<script>
    function updateCartItemCount() {
        fetch('/cart/item-count')
            .then(response => response.json())
            .then(data => {
                const cartCountElement = document.getElementById('cart-items-count');
                const itemCount = data.count;

                // Actualiza el texto del contador y su visibilidad
                if (itemCount > 0) {
                    cartCountElement.innerText = itemCount;
                    cartCountElement.hidden = false;
                } else {
                    cartCountElement.hidden = true;
                }
            })
            .catch(err => console.error('Error fetching cart item count:', err));
    }

    // Actualiza la cantidad de elementos al cargar la pÃ¡gina
    document.addEventListener('DOMContentLoaded', updateCartItemCount);

    // Configura un socket para escuchar cambios en el carrito
    const socket = io();
    socket.on('cartUpdated', () => {
        updateCartItemCount();
    });
</script>

