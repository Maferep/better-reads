<link rel="stylesheet" href="/static/css/cart.css">

<div class="cart-container">
    <h1>My Cart</h1>
    {{#if empty_cart}}
    <h2>Your cart is empty</h2>
    {{else}}
    <div class="items">
        {{#each books}}
        <div class="item">
            <img src="{{this.image}}" alt="Book Cover" style="width: 128px; height: 206px; object-fit: cover;">
            <div class="info">
                <h2>{{this.book_name}}</h2>
                <p>Authors: {{this.authors}}</p>
                <p>Genres: {{this.genre}}</p>
                <p class="item-price" id="price-{{this.id}}">Price: ${{this.price}}</p>
            </div>
            <div class="quantity-controls">
                <button class="quantity-btn decrement" onclick="updateQuantity('{{this.id}}','{{this.userId}}', -1)">-</button>
                <span class="quantity" id="quantity-{{this.id}}">{{quantity}}</span>
                <button class="quantity-btn increment" onclick="updateQuantity('{{this.id}}','{{this.userId}}', 1)">+</button>
            </div>
            <button id="add-to-cart-btn" onclick="removeFromCart('{{this.userId}}', '{{this.id}}')">Remove</button>
        </div>
        {{/each}}
    </div>
    <div class="cart-total">
        <h2 id="total-price">Total: $0.00</h2>
    </div>
    <div class="cart-btns">
        <button id="buy-btn" onclick="goToCardPurchase('{{userId}}')">Purchase</button>
        <button id="buy-btn" onclick="clearCart('{{userId}}')">Clear Cart</button>
    </div>
    {{/if}}
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Function to remove a book from the cart
    function removeFromCart(userId, bookId) {
        Swal.fire({
            title: "Are you sure?",
            text: "This action will delete the book from your cart!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                socket.emit('removeFromCart', { userId: userId, bookId: bookId });
            }
        });
    }

    function clearCart(userId) {
        Swal.fire({
            title: "Are you sure?",
            text: "This action will clear your cart!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, clear it!"
        }).then((result) => {
            if (result.isConfirmed) {
                socket.emit('clearCart',userId);
                //reload windows
                window.location.href = '/cart';
            }
        });
    }

    function goToCardPurchase(userId) {
        // Collect book quantities
        const items = document.querySelectorAll('.item');
        const cartData = Array.from(items).map((item) => {
            const bookId = item.querySelector('.quantity').id.split('-')[1];
            const quantity = parseInt(item.querySelector('.quantity').textContent);
            return { bookId, quantity };
        });

        // Emit the cart data to the server
        window.location.href = '/cart/shipping_address';
    }


    /// Actualizar el DOM cuando se elimina un libro del carrito
    socket.on('bookRemovedFromCart', (data) => {
        const { bookId } = data;

        // Eliminar el elemento del libro en el DOM
        const itemElement = document.querySelector(`.item #quantity-${bookId}`).closest('.item');
        if (itemElement) {
            itemElement.remove();
        }


        // Recalcular el precio total después de eliminar, solo si hay elementos en el carrito
        // Si no hay elemento en el carrito no mostrar el precio total
        if (document.querySelectorAll('.item').length > 0) {
            calculateTotalPrice();
        }
    });


    let cartQuantities = {}; // Para mantener el seguimiento de las cantidades de cada libro

    function calculateTotalPrice() {
        const totalPriceElement = document.getElementById('total-price'); // Asegúrate de que este elemento existe
        let totalPrice = 0;

        // Seleccionar todos los elementos `.item`
        const items = document.querySelectorAll('.item');

        items.forEach((item) => {
            const priceElement = item.querySelector('.item-price');
            const quantityElement = item.querySelector('.quantity');

            if (!priceElement || !quantityElement) {
                console.warn('Price or quantity element missing in an item.');
                return;
            }

            // Obtener el precio individual y la cantidad
            const price = parseFloat(priceElement.textContent.split('$')[1]);
            const quantity = parseInt(quantityElement.textContent);

            totalPrice += price * quantity; // Calcular el total
        });

        // Actualizar el precio total en el DOM
        if (totalPriceElement) {
            totalPriceElement.textContent = `Total: $${totalPrice.toFixed(2)}`;
        } else {
            return
        }
    }

    
    function updateQuantity(bookId, userId, change) {
        console.log('Updating quantity for book', bookId, 'by', change);
        const quantityElement = document.getElementById(`quantity-${bookId}`);
        if (!quantityElement) {
            console.error('Quantity element not found.');
            return;
        }

        let quantity = parseInt(quantityElement.textContent);
        quantity += change;

        if (quantity < 1) {
            quantity = 1;
        }

        if (quantity == 1) {
            //Hide minus button
            document.querySelector(`.item #quantity-${bookId}`).previousElementSibling.style.display = 'none';
        } else {
            //Show minus button
            document.querySelector(`.item #quantity-${bookId}`).previousElementSibling.style.display = 'inline-block';
        }

        quantityElement.textContent = quantity;

        socket.emit("bookQuantityChanged", { userId, bookId, quantity });

        // Recalcular el precio total después de cambiar la cantidad
        calculateTotalPrice();
    }

    // Llama a esta función cuando la página se haya cargado
    document.addEventListener('DOMContentLoaded', function() {
        // Recalcular el precio total después de eliminar, solo si hay elementos en el carrito
        // Si no hay elemento en el carrito no mostrar el precio total
        if (document.querySelectorAll('.item').length > 0) {
            calculateTotalPrice();
        }

        //Hacer lo anterior, pero para cada uno de los 

    });
</script>
